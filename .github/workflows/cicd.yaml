name: Django CI

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # - name: SonarQube Scan
      #   uses: sonarsource/sonarqube-scan-action@master
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #     SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      # Check the Quality Gate status.
      # - name: SonarQube Quality Gate check
      #   id: sonarqube-quality-gate-check
      #   uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #     SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
    
      # - name: Set up Python 3.9
      #   uses: actions/setup-python@v3
      #   with:
      #     python-version: 3.9
        
      # - name: Install Dependencies
      #   run: |
      #     python -m pip install --upgrade pip
      #     pip install -r requirements.txt
        
      #- name: Run Tests
      # run: |
      # python manage.py test

      - name: Build & Push docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          tags: georgeao/django-app:1.0.${{ github.run_id }}
          push: true

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
    

      - name: Run Trivy vulnerability scanner on docker image
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: 'georgeao/django-app:v1.0.${{ github.run_id }}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
      
  

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
    
      - name: Push docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: georgeao/firstapp:v1.0.${{ github.run_id }}
      

  # modify_image_tag:
  #   needs: push
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4
  #       with:
  #         repository: 'repo-link'
  #         token: ${{ secrets.GIT_TOKEN }}
  #         path: 'repo-path'

  #     - name: Changing the deployment of git repo
  #       run: |
  #         git config user.email "${{ secrets.email }}"
  #         git config user.name "${{ secrets.name }}"
  #         echo "Working Directory: $(pwd)"
       
  #         # Navigate to the specific Helm chart directory
  #         cd helm-chart-dir
         
  #         # Print values.yaml for debugging before changes
  #         echo "Before modification:"
  #         cat values.yaml
         
  #         sed -i 's/^ *tag:.*/  tag: "'${{ vars.ENVIRONMENT }}-${{ github.run_number }}'"/' values.yaml
         
  #         # Print values.yaml for debugging after changes
  #         echo "After modification:"
  #         cat values.yaml
         
  #         git add values.yaml
  #         git commit -m "Update image tag by Github Actions Job change manifest: ${{ github.run_id }}"
  #         git push origin dev
  #       env:
  #         GIT_USERNAME: ${{ secrets.GIT_USERNAME }}
  #         GIT_PASSWORD: ${{ secrets.GIT_TOKEN }}
  #         RUN_NUMBER: ${{ github.run_id }}
  #         ENVIRONMENT: ${{ vars.ENVIRONMENT }}
